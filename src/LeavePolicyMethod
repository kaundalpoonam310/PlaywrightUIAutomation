import { test, expect } from '@playwright/test';

test('test', async ({ page }) => {
  await page.goto('https://qahris.peoplehum.org/portal/login');
  await page.getByRole('textbox', { name: 'Business Email*' }).click();
  await page.getByRole('textbox', { name: 'Business Email*' }).fill('payrollautomationgreythrtest@gmail.com');
  await page.getByRole('textbox', { name: 'Business Email*' }).press('Tab');
  await page.getByRole('textbox', { name: 'Password*' }).fill('Test@123');
  await page.getByRole('button', { name: 'Sign in' }).click();
  await page.locator('.icon-dropdown').click();
  await page.getByRole('link', { name: 'Organization settings' }).click();
  await page.getByRole('textbox', { name: 'Search settings' }).click();
  await page.getByRole('textbox', { name: 'Search settings' }).fill('Leave');
  await page.getByText('Leave category').click();
  await page.getByRole('button', { name: 'New leave category' }).click();
  await page.getByRole('textbox', { name: 'Enter category name' }).click();
  await page.getByRole('textbox', { name: 'Enter category name' }).fill('Leave');
  await page.getByRole('textbox', { name: 'Enter category name' }).press('ControlOrMeta+a');
  await page.getByRole('textbox', { name: 'Enter category name' }).fill('SickCategory1');
  await page.getByRole('textbox', { name: 'Enter category name' }).press('ControlOrMeta+a');
  await page.getByRole('textbox', { name: 'Enter category name' }).press('ControlOrMeta+c');
  await page.getByRole('textbox', { name: 'Enter category name' }).click();
  await page.getByRole('textbox', { name: 'Enter Category code' }).click();
  await page.getByRole('textbox', { name: 'Enter Category code' }).fill('SickCategory1');
  await page.getByRole('textbox', { name: 'Enter leave description' }).click();
  await page.getByRole('textbox', { name: 'Enter leave description' }).fill('SickCategory1 description');
  await page.getByRole('listitem').filter({ hasText: 'Make leave description' }).locator('div').click();
  await page.getByRole('button', { name: ' Browse for a file' }).click();
  await page.getByRole('button', { name: ' Browse for a file' }).setInputFiles('wiproLogo.png');
  await page.getByRole('button', { name: 'Next step L' }).click();
  await page.getByRole('listitem').filter({ hasText: 'Unpaid leave' }).locator('div').click();
  await page.getByRole('button', { name: 'Next step L' }).click();
  await page.getByRole('list').filter({ hasText: 'Yes No' }).locator('div').first().click();
  await page.getByRole('button', { name: 'Save', exact: true }).click();
  await page.getByText('Leave policy', { exact: true }).click();
  await page.getByRole('button', { name: 'New leave policy' }).click();
  await page.getByRole('textbox', { name: 'Enter leave policy name' }).click();
  await page.getByRole('textbox', { name: 'Enter leave policy name' }).fill('SickPolicy1');
  await page.getByRole('textbox', { name: 'Enter leave policy description' }).click();
  await page.getByRole('textbox', { name: 'Enter leave policy description' }).fill('SickPolicy description');
  await page.getByRole('combobox').click();
  await page.getByText('SickCategory1').click();
  await page.getByRole('button', { name: 'Next step L' }).click();
  await page.getByRole('button', { name: 'Next step L' }).click();
  await page.getByRole('listitem').filter({ hasText: 'Custom' }).locator('div').click();
  await page.locator('.ng-input').first().click();
  await page.getByText('Yearly', { exact: true }).click();
  await page.locator('input[name="accrualLeaveCount"]').click();
  await page.locator('input[name="accrualLeaveCount"]').fill('12');
  await page.locator('div:nth-child(6) > .col-md-6 > .form-group > .ng-select > .ng-select-container > .ng-value-container > .ng-input').click();
  await page.getByText('Start of Period').click();
  await page.getByRole('spinbutton').click();
  await page.getByRole('spinbutton').fill('5');
  await page.locator('input[name="numberOfSimultaneousLeave"]').click();
  await page.locator('input[name="numberOfSimultaneousLeave"]').fill('5');
  await page.getByRole('spinbutton').click();
  await page.getByRole('spinbutton').fill('');
  await page.getByRole('listitem').filter({ hasText: 'Yes, allow manual adjustments' }).locator('div').click();
  await page.getByRole('listitem').filter({ hasText: 'Yes, allow manager to add' }).locator('div').click();
  await page.getByRole('button', { name: 'Next step L' }).click();
  await page.getByRole('button', { name: 'Next step L' }).click();
  await page.getByRole('listbox').locator('span').nth(1).click();
  await page.getByRole('button', { name: 'Next step L' }).click();
  await page.getByRole('listbox').locator('div').nth(3).click();
  await page.getByRole('option', { name: 'Cancel' }).locator('div').click();
  await page.getByRole('button', { name: 'Next step L' }).click();
  await page.getByRole('list').filter({ hasText: 'Yes No' }).locator('div').first().click();
  await page.locator('toggle-area').filter({ hasText: 'Do you want to restrict' }).locator('span').click();
  await page.getByPlaceholder('Enter number of days').click();
  await page.getByPlaceholder('Enter number of days').fill('12');
  await page.locator('toggle-area').filter({ hasText: 'Do you want to include weekly' }).locator('span').click();
  await page.getByRole('textbox', { name: 'Enter a value' }).click();
  await page.getByRole('textbox', { name: 'Enter a value' }).fill('5');
  await page.locator('toggle-area').filter({ hasText: 'Do you want to include holiday between leave days in leave count? No' }).locator('span').click();
  await page.locator('input[name="thresholdToIncludeHoliday"]').click();
  await page.locator('input[name="thresholdToIncludeHoliday"]').fill('5');
  await page.locator('toggle-area').filter({ hasText: 'Limit the number of leaves an' }).locator('span').click();
  await page.getByRole('listbox').locator('div').nth(3).click();
  await page.getByRole('option', { name: 'Yearly', exact: true }).locator('div').click();
  await page.locator('input[name="leaveLimitCount"]').click();
  await page.locator('input[name="leaveLimitCount"]').fill('5');
  await page.locator('toggle-area').filter({ hasText: 'Do you want to allow negative' }).locator('span').click();
  await page.locator('toggle-area').filter({ hasText: 'Limit the minimum number of' }).locator('span').click();
  await page.locator('input[name="leaveCount"]').click();
  await page.locator('input[name="leaveCount"]').fill('5');
  await page.locator('input[name="atLeastDays"]').click();
  await page.locator('input[name="atLeastDays"]').fill('5');
  await page.locator('div:nth-child(3) > .ng-select > .ng-select-container > .ng-value-container > .ng-input').click();
  await page.getByText('Business days').click();
  await page.getByRole('button', { name: 'Next step L' }).click();
  await page.getByRole('listbox').locator('span').first().click();
  await page.getByRole('button', { name: 'Next step L' }).click();
  await page.getByRole('listbox').locator('span').nth(1).click();
  await page.getByRole('button', { name: 'Next step L' }).click();
  await page.getByRole('button', { name: 'Save', exact: true }).click();
});