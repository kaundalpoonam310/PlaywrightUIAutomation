public String createQuiz(Quiz quiz) throws Exception{
        assertionInfo="Unable to create Quiz";
        String externalLink="";
        wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath,"buttonText", JSONFileParser.getLocaleText(localePath,"PH_NEW_QUIZ"))))).click();
        waitAllRequest();
        wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath,"buttonText", JSONFileParser.getLocaleText(localePath,"PH_PROCEED"))))).click();
        waitAllRequest();
        wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath,"inputPlaceholder",JSONFileParser.getLocaleText(localePath,"QUIZ_LAUNCH_ENTER_QUIZ_NAME_TEXT"))))).sendKeys(quiz.quizName);
        waitAllRequest();
        wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath,"textAreaPlaceholder",JSONFileParser.getLocaleText(localePath,"QUIZ_LAUNCH_ADD_DESCRIPTION_TEXT"))))).sendKeys(quiz.quizDescription);
        wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath,"spanText",JSONFileParser.getLocaleText(localePath,"QUIZ_LAUNCH_ENTER_TEMPLATE_NAME_TEXT"))))).click();
        waitAllRequest();

        wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath,"inputText",JSONFileParser.getLocaleText(localePath,"QUIZ_LAUNCH_ENTER_TEMPLATE_NAME_TEXT"))))).sendKeys(quiz.chooseTemplate);

        wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath, "spanText", quiz.chooseTemplate)))).click();
        waitAllRequest();

        wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath,"selectDateTime", JSONFileParser.getLocaleText(localePath, "QUIZ_CHANGE_START_DATE_TEXT"))))).click();
        selectDateInCalendarControl2(quiz.startDate);
        wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath, "selectDateTime", JSONFileParser.getLocaleText(localePath, "QUIZ_CHANGE_START_TIME_TEXT"))))).click();
        waitAllRequest();
        setTimeV2(quiz.startTime.split(":")[0], quiz.startTime.split(":")[1], quiz.startTime.split(":")[2]);
        waitAllRequest();

        wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath, "selectDateTime", JSONFileParser.getLocaleText(localePath, "END_DATE"))))).click();
        selectDateInCalendarControl2(quiz.endDate);

        wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath, "selectDateTime", JSONFileParser.getLocaleText(localePath, "PH_END_TIME"))))).click();
        waitAllRequest();
        setTimeV2(quiz.endTime.split(":")[0], quiz.endTime.split(":")[1], quiz.endTime.split(":")[2]);
        waitAllRequest();

        wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath,"inputName",JSONFileParser.getLocaleText(localePath,"HOURS"))))).sendKeys(String.valueOf(quiz.timeLimitHours));
        wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath,"inputName",JSONFileParser.getLocaleText(localePath,"PH_MINUTES_L"))))).sendKeys(String.valueOf(quiz.timeLimitMinutes));
        wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath,"inputName",JSONFileParser.getLocaleText(localePath,"PH_SECONDS_L"))))).sendKeys(String.valueOf(quiz.timeLimitSeconds));
        if(quiz.unlimitedAttempts){
            wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath,"labelText",JSONFileParser.getLocaleText(localePath,"PH_UNLIMITED_ATTEMPTS"))))).click();
            waitAllRequest();
        }
        else {
            wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath,"numberOfAttempts")))).clear();
            waitAllRequest();
            wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath,"numberOfAttempts")))).sendKeys(quiz.numberOfAttempts);
            waitAllRequest();
        }
        wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath,"spanTextPreccedingSibling",JSONFileParser.getLocaleText(localePath,"QUIZ_LAUNCH_PER_CORRECT_ANSWER_REQUIRED_TEXT"))))).sendKeys(quiz.passPercentage);
        waitAllRequest();

        if(quiz.displayResultToUsers){
            wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath,"spanInput",JSONFileParser.getLocaleText(localePath,"QUIZ_LAUNCH_DISPLAY_RESULT_TEXT"),JSONFileParser.getLocaleText(localePath,"YES"))))).click();
            if(quiz.viewSubmittedResponses){
                wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath,"spanInput",JSONFileParser.getLocaleText(localePath,"QUIZ_LAUNCH_DISPLAY_CORRECT_ANSWER_TEXT"),JSONFileParser.getLocaleText(localePath,"QUIZ_LAUNCH_END_OF_QUIZ_TEXT"))))).click();
            }
        }
        if(quiz.randomizeQuestions){
            wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath,"spanInput",JSONFileParser.getLocaleText(localePath,"PH_SHOW_QUESTION_RANDOMIZED_OPTION_TEXT"),JSONFileParser.getLocaleText(localePath,"YES"))))).click();
        }
        if(quiz.randomizeOptions){
            wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath,"spanInput",JSONFileParser.getLocaleText(localePath,"PH_SHOW_OPTION_RANDOMIZED_OPTION_TEXT"),JSONFileParser.getLocaleText(localePath,"YES"))))).click();
        }
        if(quiz.inviteApplicability.equalsIgnoreCase(JSONFileParser.getLocaleText(localePath,"PH_PEOPLE_VIEW"))) {
            selectTypeForFilterBy(quiz);
            if(quiz.addUsers!=null){
                for(int i=0;i<quiz.addUsers.size();i++) {
                    wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath, "inputPlaceholder", JSONFileParser.getLocaleText(localePath, "QUIZ_LAUNCH_SEARCH_PEOPLE_ADD_TEXT"))))).click();
                    waitAllRequest();
                    wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath, "inputPlaceholder", JSONFileParser.getLocaleText(localePath, "QUIZ_LAUNCH_SEARCH_PEOPLE_ADD_TEXT"))))).sendKeys(quiz.addUsers.get(i));
                    waitAllRequest();
                    wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath, "spanText", quiz.addUsers.get(i))))).click();
                    waitAllRequest();
                }
            }
        }
        if(quiz.inviteApplicability.equalsIgnoreCase(JSONFileParser.getLocaleText(localePath,"PH_TEAM_VIEW"))) {
            wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath,"labelText",JSONFileParser.getLocaleText(localePath,"PH_TEAM_VIEW"))))).click();
            wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath,"spanText",JSONFileParser.getLocaleText(localePath,"QUIZ_CREATE_DETAILS_SELECT_TYPE_TEXT"))))).click();
            wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath,"divContainsTextType",JSONFileParser.getLocaleText(localePath,"TYPE"))))).click();
            waitAllRequest();
            if(quiz.filterByType!=null){
                for(int i=0;i<quiz.filterType.size();i++) {
                    waitAllRequest();
                    wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath, "inputPlaceholder", JSONFileParser.getLocaleText(localePath, "QUIZ_LAUNCH_INVITE_SEARCH_BY_JOB_FUNCTION_TEXT"))))).sendKeys(quiz.filterType.get(i));
                    waitAllRequest();
                    wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath, "spanText", quiz.filterType.get(i))))).click();
                    waitAllRequest();
                }
            }
            if(quiz.addUsers!=null){
                for(int i=0;i<quiz.addUsers.size();i++) {
                    wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath, "inputPlaceholder", JSONFileParser.getLocaleText(localePath, "QUIZ_LAUNCH_SEARCH_PEOPLE_ADD_TEXT"))))).click();
                    waitAllRequest();
                    wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath, "inputPlaceholder", JSONFileParser.getLocaleText(localePath, "QUIZ_LAUNCH_SEARCH_PEOPLE_ADD_TEXT"))))).sendKeys(quiz.addUsers.get(i));
                    waitAllRequest();
                    wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath, "spanText", quiz.filterType.get(i))))).click();
                    waitAllRequest();
                }
            }
            if(quiz.addTeams!=null){
                for(int i=0;i<quiz.addTeams.size();i++) {
                    wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath, "inputPlaceholder", JSONFileParser.getLocaleText(localePath, "PH_TYPE_AHEAD_TEAM"))))).click();
                    waitAllRequest();
                    wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath, "inputPlaceholder", JSONFileParser.getLocaleText(localePath, "PH_TYPE_AHEAD_TEAM"))))).sendKeys(quiz.addTeams.get(i));
                    waitAllRequest();
                    wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath, "spanText", quiz.addTeams.get(i))))).click();
                    waitAllRequest();
                }
            }
        }
        if(quiz.inviteApplicability.equalsIgnoreCase(JSONFileParser.getLocaleText(localePath,"EVERYONE"))) {
            wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath,"labelText",JSONFileParser.getLocaleText(localePath,"EVERYONE"))))).click();
            waitAllRequest();
        }
        if(quiz.inviteApplicability.equalsIgnoreCase(JSONFileParser.getLocaleText(localePath,"QUIZ_LAUNCH_GET_SHARABLE_LINK_TEXT"))) {
            wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath,"labelText",JSONFileParser.getLocaleText(localePath,"QUIZ_LAUNCH_GET_SHARABLE_LINK_TEXT"))))).click();
            waitAllRequest();
        }
        if(quiz.saveAsDraft)
        {
            wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath,"buttonText",JSONFileParser.getLocaleText(localePath,"PH_SAVE_AS_DRAFT"))))).click();
            wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(elementController.getElementIdentifier(this.elementRepoPath,"spanText",JSONFileParser.getLocaleText(localePath,"PH_DRAFT_SAVED_SUCCESSFULLY")))));
            waitForElementDisappear(elementController.getElementIdentifier(elementRepoPath, "spanText",JSONFileParser.getLocaleText(localePath,"PH_DRAFT_SAVED_SUCCESSFULLY")));

        }
        else
        {
            if(quiz.inviteApplicability.equalsIgnoreCase(JSONFileParser.getLocaleText(localePath,"QUIZ_LAUNCH_GET_SHARABLE_LINK_TEXT"))) {
                wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath,"spanText",JSONFileParser.getLocaleText(localePath,"PH_CREATE"))))).click();
                waitAllRequest();
                wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath,"buttonText",JSONFileParser.getLocaleText(localePath,"COPY_LINK"))))).click();
                wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(elementController.getElementIdentifier(this.elementRepoPath,"spanText",JSONFileParser.getLocaleText(localePath,"PH_LINK_COPIED_SUCCESSFULLY_TO_CLIPBOARD")))));
                waitForElementDisappear(elementController.getElementIdentifier(elementRepoPath, "spanText",JSONFileParser.getLocaleText(localePath,"PH_LINK_COPIED_SUCCESSFULLY_TO_CLIPBOARD")));
            }
            else
            {
                wait.until(ExpectedConditions.elementToBeClickable(By.xpath(elementController.getElementIdentifier(this.elementRepoPath,"spanText",JSONFileParser.getLocaleText(localePath,"PH_CREATE"))))).click();
                wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(elementController.getElementIdentifier(this.elementRepoPath,"spanText",JSONFileParser.getLocaleText(localePath,"QUIZ_CREATED_SUCCESSFULLY")))));
                waitForElementDisappear(elementController.getElementIdentifier(elementRepoPath, "spanText",JSONFileParser.getLocaleText(localePath,"QUIZ_CREATED_SUCCESSFULLY")));
            }
        }
        return externalLink;
    }